from PyQt5.QtCore import Qt
from model import WeatherModel
import string
import requests

class WeatherController:
    def __init__(self, view):
        self.view = view
        self.model = WeatherModel()

        self.view.weather_button.clicked.connect(self.handle_weather_request)

    def handle_weather_request(self):
        city_name = self.view.city_input.text()
        try:
            data = self.model.get_weather_data(city_name)
            result = self.model.analyze_weather(data)
            self.update_view(result)
        except ValueError:
            self.display_error("Kh√¥ng t√¨m th·∫•y th√†nh ph·ªë ho·∫∑c ph·∫£n h·ªìi kh√¥ng h·ª£p l·ªá.")
        except requests.exceptions.HTTPError as http_error:
            self.handle_http_error(http_error)
        except requests.exceptions.ConnectionError:
            self.display_error("L·ªói k·∫øt n·ªëi!\nVui l√≤ng ki·ªÉm tra k·∫øt n·ªëi Internet.")
        except requests.exceptions.Timeout:
            self.display_error("L·ªói th·ªùi gian ch·ªù.\nY√™u c·∫ßu qu√° th·ªùi gian cho ph√©p.")
        except requests.exceptions.TooManyRedirects:
            self.display_error("Qu√° nhi·ªÅu chuy·ªÉn h∆∞·ªõng. Ki·ªÉm tra URL.")
        except requests.exceptions.RequestException as req_error:
            self.display_error(f"L·ªói y√™u c·∫ßu:\n{req_error}")

    def update_view(self, result):
        temp = result["temp_c"]
        weather_id = result["weather_id"]
        description = result["description"]
        advice = result["advice"]

        self.view.temp_label.setStyleSheet("font-size: 75px;")

        # Check if temperature should be displayed in Fahrenheit
        if self.view.is_celsius:
            self.view.temp_label.setText(f"{temp:.0f}¬∞C")
        else:
            fahrenheit_temp = (temp * 9 / 5) + 32
            self.view.temp_label.setText(f"{fahrenheit_temp:.0f}¬∞F")

        self.view.emoji_label.setText(self.get_weather_emoji(weather_id))
        self.view.discription_label.setText(string.capwords(description))
        self.view.set_clothing_advice(advice)

    def display_error(self, message):
        self.view.temp_label.setStyleSheet("font-size: 30px;")
        self.view.temp_label.setText(message)
        self.view.emoji_label.setText("")
        self.view.discription_label.setText("")
        self.view.advice_label.clear()

    def handle_http_error(self, http_error):
        match http_error.response.status_code:
            case 400:
                self.display_error("Y√™u c·∫ßu kh√¥ng h·ª£p l·ªá.")
            case 401:
                self.display_error("API key kh√¥ng h·ª£p l·ªá.")
            case 403:
                self.display_error("Truy c·∫≠p b·ªã t·ª´ ch·ªëi!")
            case 404:
                self.display_error("Kh√¥ng t√¨m th·∫•y th√†nh ph·ªë!")
            case 500:
                self.display_error("L·ªói m√°y ch·ªß n·ªôi b·ªô.")
            case 502:
                self.display_error("Bad Gateway.")
            case 503:
                self.display_error("D·ªãch v·ª• kh√¥ng kh·∫£ d·ª•ng.")
            case 504:
                self.display_error("Gateway Timeout.")
            case _:
                self.display_error(f"L·ªói HTTP kh√¥ng x√°c ƒë·ªãnh: {http_error}")

    @staticmethod
    def get_weather_emoji(weather_id):
        if 200 <= weather_id <= 232:
            return "‚õàÔ∏è"
        elif 300 <= weather_id <= 321:
            return "üå¶Ô∏è"
        elif 500 <= weather_id <= 504:
            return "üåßÔ∏è"
        elif weather_id == 511:
            return "üå®Ô∏è"
        elif 520 <= weather_id <= 531:
            return "üåßÔ∏è"
        elif 600 <= weather_id <= 602:
            return "üå®Ô∏è"
        elif 611 <= weather_id <= 616:
            return "üå®Ô∏è"
        elif 620 <= weather_id <= 622:
            return "‚ùÑÔ∏è"
        elif 701 <= weather_id <= 781:
            return "üå´Ô∏è"
        elif weather_id == 800:
            return "‚òÄÔ∏è"
        elif weather_id == 801:
            return "üå§Ô∏è"
        elif weather_id == 802:
            return "‚õÖ"
        elif weather_id == 803:
            return "üå•Ô∏è"
        elif weather_id == 804:
            return "‚òÅÔ∏è"
        else:
            return ""
